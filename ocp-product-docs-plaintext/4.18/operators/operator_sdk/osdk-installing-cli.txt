# Installing the Operator SDK CLI


The Operator SDK provides a command-line interface (CLI) tool that Operator developers can use to build, test, and deploy an Operator. You can install the Operator SDK CLI on your workstation so that you are prepared to start authoring your own Operators.

[IMPORTANT]
----
The Red Hat-supported version of the Operator SDK CLI tool, including the related scaffolding and testing tools for Operator projects, is deprecated and is planned to be removed in a future release of Red Hat OpenShift Container Platform. Red Hat will provide bug fixes and support for this feature during the current release lifecycle, but this feature will no longer receive enhancements and will be removed from future Red Hat OpenShift Container Platform releases.
The Red Hat-supported version of the Operator SDK is not recommended for creating new Operator projects. Operator authors with existing Operator projects can use the version of the Operator SDK CLI tool released with Red Hat OpenShift Container Platform 4.18 to maintain their projects and create Operator releases targeting newer versions of Red Hat OpenShift Container Platform.
The following related base images for Operator projects are not deprecated. The runtime functionality and configuration APIs for these base images are still supported for bug fixes and for addressing CVEs.
* The base image for Ansible-based Operator projects
* The base image for Helm-based Operator projects
For the most recent list of major functionality that has been deprecated or removed within Red Hat OpenShift Container Platform, refer to the Deprecated and removed features section of the Red Hat OpenShift Container Platform release notes.
For information about the unsupported, community-maintained, version of the Operator SDK, see Operator SDK (Operator Framework).
----
Operator authors with cluster administrator access to a Kubernetes-based cluster, such as Red Hat OpenShift Container Platform,
can use the Operator SDK CLI to develop their own Operators based on Go, Ansible, Java, or Helm. Kubebuilder is embedded into the Operator SDK as the scaffolding solution for Go-based Operators, which means existing Kubebuilder projects can be used as is with the Operator SDK and continue to work.

[NOTE]
----
Red Hat OpenShift Container Platform 4.18 supports Operator SDK 1.38.0.
----

# Installing the Operator SDK CLI on Linux

You can install the OpenShift SDK CLI tool on Linux.

* Go v1.19+
* docker v17.03+, podman v1.9.3+, or buildah v1.7+

1. Navigate to the OpenShift mirror site.
2. From the latest 4.18 directory, download the latest version of the tarball for Linux.
3. Unpack the archive:

```terminal
$ tar xvf operator-sdk-v1.38.0-ocp-linux-x86_64.tar.gz
```

4. Make the file executable:

```terminal
$ chmod +x operator-sdk
```

5. Move the extracted operator-sdk binary to a directory that is on your PATH.

[TIP]
----
To check your PATH:

```terminal
$ echo $PATH
```

----

```terminal
$ sudo mv ./operator-sdk /usr/local/bin/operator-sdk
```


* After you install the Operator SDK CLI, verify that it is available:

```terminal
$ operator-sdk version
```

Example output

```terminal
operator-sdk version: "v1.38.0-ocp", ...
```


# Installing the Operator SDK CLI on macOS

You can install the OpenShift SDK CLI tool on macOS.

* Go v1.19+
* docker v17.03+, podman v1.9.3+, or buildah v1.7+

1. For the amd64 and arm64 architectures, navigate to the OpenShift mirror site for the amd64 architecture and OpenShift mirror site for the arm64 architecture respectively.
2. From the latest 4.18 directory, download the latest version of the tarball for macOS.
3. Unpack the Operator SDK archive for amd64 architecture by running the following command:

```terminal
$ tar xvf operator-sdk-v1.38.0-ocp-darwin-x86_64.tar.gz
```

4. Unpack the Operator SDK archive for arm64 architecture by running the following command:

```terminal
$ tar xvf operator-sdk-v1.38.0-ocp-darwin-aarch64.tar.gz
```

5. Make the file executable by running the following command:

```terminal
$ chmod +x operator-sdk
```

6. Move the extracted operator-sdk binary to a directory that is on your PATH by running the following command:

[TIP]
----
Check your PATH by running the following command:

```terminal
$ echo $PATH
```

----

```terminal
$ sudo mv ./operator-sdk /usr/local/bin/operator-sdk
```


* After you install the Operator SDK CLI, verify that it is available by running the following command::

```terminal
$ operator-sdk version
```

Example output

```terminal
operator-sdk version: "v1.38.0-ocp", ...
```
