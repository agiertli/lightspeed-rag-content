# Monitoring the External Secrets Operator for Red Hat OpenShift


You can expose controller metrics for the External Secrets Operator for Red Hat OpenShift in the format provided by the Prometheus Operator.

[IMPORTANT]
----
The External Secrets Operator for Red Hat OpenShift is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.
For more information about the support scope of Red Hat Technology Preview features, see Technology Preview Features Support Scope.
----

# Enabling monitoring for the External Secrets Operator for Red Hat OpenShift by using a service monitor

Enable monitoring and metrics collection for the External Secrets Operator for Red Hat OpenShift by using a service monitor to perform the custom metrics scraping.

* You have access to the cluster with cluster-admin privileges.
* The External Secrets Operator is installed.

1. Enable cluster monitoring by labeling the External Secrets Operator namespace by running the following command:

```terminal
$ oc label namespace external-secrets-operator openshift.io/cluster-monitoring=true
```

2. Create a YAML file that defines the Role, RoleBinding, and ServiceMonitor objects:
Example monitoring.yaml file

```yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus-k8s
  namespace: external-secrets-operator
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-k8s
  namespace: external-secrets-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-k8s
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: external-secrets-operator
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: external-secrets
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/name: external-secrets
  name: external-secrets
  namespace: external-secrets-operator
spec:
  endpoints:
  - interval: 30s
    port: tcp-prometheus-servicemonitor
    scheme: http
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: external-secrets
app.kubernetes.io/name: external-secrets
```

3. Create the Role, RoleBinding, and ServiceMonitor objects by running the following command:

```terminal
$ oc create -f monitoring.yaml
```


* Setting up metrics collection for user-defined projects

# Querying metrics for the External Secrets Operator for Red Hat OpenShift

After you enable monitoring for the External Secrets Operator for Red Hat OpenShift, you can query its metrics.

* You have access to the cluster as a user with the cluster-admin role.
* You installed the External Secrets Operator.
* You enabled monitoring and metrics collection for the External Secrets Operator.

1. Find the endpoint value by running the following command:

```terminal
$ oc describe service external-secrets -n external-secrets
```

2. From the Red Hat OpenShift Container Platform web console, navigate to Observe -> Metrics.
3. Add a query by using the following formats:
1. Specify the endpoints:

```promql
{instance="<endpoint>"} 1
```

Replace <endpoint> with the value of the endpoint for the external-secrets service.
2. Specify the tcp-prometheus-servicemonitor port:

```promql
{endpoint="tcp-prometheus-servicemonitor"}
```


# Enabling monitoring for the External Secrets operand for Red Hat OpenShift by using a service monitor

Enable monitoring and metrics collection for the External Secrets operand by using a service monitor to perform the custom metrics scraping.

* You have access to the cluster with cluster-admin privileges.
* The External Secrets operand is installed.

1. Enable cluster monitoring by labeling the External Secrets operand namespace by running the following command:

```terminal
$ oc label namespace external-secrets openshift.io/cluster-monitoring=true
```

2. Create a YAML file that defines the Role, RoleBinding, and ServiceMonitor objects:
Example monitoring.yaml file

```yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus-k8s
  namespace: external-secrets
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-k8s
  namespace: external-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-k8s
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: external-secrets
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: external-secrets
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: external-secrets
    app.kubernetes.io/name: external-secrets
  name: external-secrets
  namespace: external-secrets
spec:
  endpoints:
  - interval: 30s
    port: tcp-prometheus-servicemonitor
    scheme: http
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: external-secrets
app.kubernetes.io/name: external-secrets
```

3. Create the Role, RoleBinding, and ServiceMonitor objects by running the following command:

```terminal
$ oc create -f monitoring.yaml
```
